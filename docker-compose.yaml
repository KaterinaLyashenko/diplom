version: '3.8'

services:

  db:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data/   #что-то типа флешки
    ports:
      - "5432:5432"  #локальный порт: порт внутри машины
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s  # повторение healthcheck
      timeout: 3s  # время задержки healthcheck(только при старте)
      retries: 10  # повторение interval

  run_migrations:
    build: .
    env_file: .env  #собирает переменное окружение
    environment:
      POSTGRES_HOST: db  # указывает название сервиса с базой
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate # преобразование команды CMD в Dockerfile

  api: # бэкенд
    build: .
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
      run_migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./core:/app/core/
      - ./todolist:/app/todolist

  frontend:
    image: sermalenk/skypro-front:lesson-34  # образ
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started


volumes:
    pg_data:
